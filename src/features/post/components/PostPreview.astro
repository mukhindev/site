---
import type { CollectionEntry } from "astro:content";
import type { HTMLAttributes } from "astro/types";
import Tag from "../../../shared/ui/Tag.astro";
import { findOrCreateTagByName, findTagByName } from "../../../tags";
import Link from "../../../shared/ui/Link.astro";

interface Props extends HTMLAttributes<"div"> {
  post: CollectionEntry<"posts">;
}

const { class: className, post, ...attrs } = Astro.props;

const [, annotation] = post.rendered?.html.match(/<p>(.*?)<\/p>/s) ?? [];
const tags = post.data.tags.map((tag) => findOrCreateTagByName(tag)!);
---

<div class:list={["post-preview", className]} {...attrs}>
  <div class="post-preview__meta">
    <span class="post-preview__date">
      {post.data.date.toLocaleDateString("ru-RU")}
    </span>
  </div>
  <div class="post-preview__content">
    <Link class="post-preview__link" href={`/p/${post.id}`}>
      <h3 class="post-preview__title">{post.data.title}</h3>
    </Link>
    {tags.map((tag) => <Tag label={tag?.name} href={`/tags/${tag?.slug}`} />)}
    <p
      class="post-preview__description"
      set:html={post.data.description || annotation}
    />
  </div>
</div>

<style>
  .post-preview {
    //background-color: var(--surface);
    border-bottom: 1px solid var(--border);
    border-top: 1px solid var(--border);
    //border-radius: 8px;
    padding: 16px;
    display: flex;
    flex-direction: row;
    align-items: baseline;
    gap: 16px;
  }

  .post-preview__meta {
    flex-shrink: 0;
    width: 128px;
  }

  .post-preview__link {
    display: block;
    text-wrap: balance;
    place-self: start;
  }

  .post-preview__title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .post-preview__content {
    flex-grow: 1;
  }
</style>
